{"version":3,"sources":["Counter/Counter.module.css","Counter/Display/Display.tsx","Counter/Buttons/Buttons.tsx","Counter/Counter.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Display","props","className","count","maxValue","s","display","Buttons","buttons","button","disabled","onClick","changeHandler","resetHandler","Counter","useState","setCount","wrapper","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,QAAU,yBAAyB,SAAW,0BAA0B,QAAU,yBAAyB,OAAS,0B,gKCO5JC,EAAU,SAACC,GACpB,OACI,qBAAKC,UAAYD,EAAME,QAAUF,EAAMG,SAAWC,IAAED,SAAWC,IAAEC,QAAjE,SACI,8BAAML,EAAME,WCDXI,EAAU,SAACN,GACpB,OACI,sBAAKC,UAAWG,IAAEG,QAAlB,UACI,wBAAQN,UAAWG,IAAEI,OAAQC,SAAUT,EAAME,OAASF,EAAMG,SAAUO,QAASV,EAAMW,cAArF,iBACA,wBAAQV,UAAWG,IAAEI,OAAQC,SAAyB,GAAfT,EAAME,MAAYQ,QAASV,EAAMY,aAAxE,uBCLCC,EAAU,SAACb,GAA6B,IAAD,EAExBc,mBAAiB,GAFO,mBAEzCZ,EAFyC,KAElCa,EAFkC,KAchD,OACI,sBAAKd,UAAWG,IAAEY,QAAlB,UACI,cAAC,EAAD,CAASb,SAAUH,EAAMG,SAAUD,MAAOA,IAC1C,cAAC,EAAD,CAASC,SAAUH,EAAMG,SAAUD,MAAOA,EAAOS,cAbnC,WACfT,EAAQF,EAAMG,UACbY,EAASb,EAAQ,IAW8DU,aAPlE,WACjBG,EAAS,UCPFE,MARf,WACE,OACE,8BACE,cAAC,EAAD,CAASd,SAAU,OCMVe,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.816342f2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Counter_wrapper__3voZu\",\"display\":\"Counter_display__2Ppao\",\"maxValue\":\"Counter_maxValue__11zX7\",\"buttons\":\"Counter_buttons__3kAdR\",\"button\":\"Counter_button__31X4Y\"};","import React from \"react\";\r\nimport s from '../Counter.module.css'\r\n\r\ntype DisplayPropsType = {\r\n    count: number,\r\n    maxValue: number\r\n}\r\n\r\nexport const Display = (props: DisplayPropsType) => {\r\n    return(\r\n        <div className={ props.count === props.maxValue ? s.maxValue : s.display}>\r\n            <div>{props.count}</div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport s from '../Counter.module.css'\r\n\r\ntype ButtonsPropsType = {\r\n    count: number,\r\n    changeHandler: () => void,\r\n    resetHandler: () => void,\r\n    maxValue: number\r\n}\r\n\r\nexport const Buttons = (props: ButtonsPropsType) => {\r\n    return (\r\n        <div className={s.buttons}>\r\n            <button className={s.button} disabled={props.count >= props.maxValue} onClick={props.changeHandler}>inc</button>\r\n            <button className={s.button} disabled={props.count == 0} onClick={props.resetHandler}>reset</button>\r\n        </div>\r\n    )\r\n}","import React, {useState} from \"react\";\r\nimport {Display} from \"./Display/Display\";\r\nimport {Buttons} from \"./Buttons/Buttons\";\r\nimport s from './Counter.module.css'\r\n\r\ntype CounterPropsType = {\r\n    maxValue: number;\r\n}\r\n\r\nexport const Counter = (props: CounterPropsType) => {\r\n\r\n    const [count, setCount]=useState<number>(0)\r\n\r\n    const changeHandler = () => {\r\n        if(count < props.maxValue) {\r\n            setCount(count + 1)\r\n        }\r\n    }\r\n\r\n    const resetHandler = () => {\r\n        setCount(0)\r\n    }\r\n\r\n    return(\r\n        <div className={s.wrapper}>\r\n            <Display maxValue={props.maxValue} count={count}/>\r\n            <Buttons maxValue={props.maxValue} count={count} changeHandler={changeHandler} resetHandler={resetHandler}/>\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {Counter} from \"./Counter/Counter\";\n\nfunction App() {\n  return (\n    <div>\n      <Counter maxValue={5}/>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}